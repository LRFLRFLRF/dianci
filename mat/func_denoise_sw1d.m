function [sigDEN,wDEC] = func_denoise_sw1d()
% FUNC_DENOISE_SW1D Saved Denoising Process.
%   SIG: vector of data
%   -------------------
%   sigDEN: vector of denoised data
%   wDEC: stationary wavelet decomposition

%  Auto-generated by Wavelet Toolbox on 21-Feb-2021 10:54:04

% Analysis parameters.
%---------------------
wname = 'db10';
level = 5;
load('E:\Desktop\dianci\Python_code\mat\106to114_oneDim.mat')
SIG = data_1;
% Denoising parameters.
%----------------------
% meth = 'sqtwolog';
% scal_OR_alfa = one;
sorh = 's';    % Specified soft or hard thresholding
thrSettings =  {...
    [...
    1.000000000000000   1920.000000000000000      0.419336788392196; ...
    ]; ...
    [...
    1.000000000000000   1920.000000000000000      0.374520692004918; ...
    ]; ...
    [...
    1.000000000000000   1920.000000000000000      0.324899785212195; ...
    ]; ...
    [...
    1.000000000000000   1920.000000000000000      0.302489428148103; ...
    ]; ...
    [...
    1.000000000000000   1920.000000000000000      0.417498252687695; ...
    ]; ...
    };

% Decompose using SWT.
%---------------------
wDEC = swt(SIG,level,wname);

% Denoise.
%---------
len = length(SIG);
for k = 1:level
    thr_par = thrSettings{k};
    if ~isempty(thr_par)
        NB_int = size(thr_par,1);
        x      = [thr_par(:,1) ; thr_par(NB_int,2)];
        x      = round(x);
        x(x<1) = 1;
        x(x>len) = len;
        thr = thr_par(:,3);
        for j = 1:NB_int
            if j==1 , d_beg = 0; else d_beg = 1; end
            j_beg = x(j)+d_beg;
            j_end = x(j+1);
            j_ind = (j_beg:j_end);
            wDEC(k,j_ind) = wthresh(wDEC(k,j_ind),sorh,thr(j));
        end
    end
end

% Reconstruct the denoise signal using ISWT.
%-------------------------------------------
sigDEN = iswt(wDEC,wname);

%%显示
figure(1);% title('Vse');
hold on;
plot(data_1,'g');
plot(sigDEN,'r');
hold off;

%%保存到mat
sigDEN_t = sigDEN';  %转置
res = data_1 - sigDEN_t;
save('E:\Desktop\dianci\Python_code\mat\sigDEN.mat', 'sigDEN_t') %保存预测值
save('E:\Desktop\dianci\Python_code\mat\sigRES.mat', 'res') %保存残差

%%保存到excel
load('E:\Desktop\dianci\Python_code\mat\106to114.mat')
sigDEN_data = [data(:,1:5) sigDEN_t];
xlswrite('E:\Desktop\dianci\Python_code\mat\sigDEN.xls', sigDEN_data)

sigRES_data = [data(:,1:5) res];
xlswrite('E:\Desktop\dianci\Python_code\mat\sigRES.xls', sigRES_data)

xlswrite('E:\Desktop\dianci\Python_code\mat\sig.xls', data)

